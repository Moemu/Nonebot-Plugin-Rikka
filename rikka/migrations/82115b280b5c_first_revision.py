"""first revision

迁移 ID: 82115b280b5c
父迁移:
创建时间: 2025-10-23 11:48:37.362789

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

revision: str = "82115b280b5c"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = ("rikka",)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rikka_userbindinfo",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("friend_code", sa.String(), nullable=True),
        sa.Column("lxns_api_key", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("user_id", name=op.f("pk_rikka_userbindinfo")),
        info={"bind_key": "rikka"},
    )
    op.drop_table("muicebot_plugin_memory_memorymetric")
    op.drop_table("muicebot_plugin_memory_userprofile")
    op.drop_table("muicebot_usage")
    op.drop_table("muicebot_plugin_memory_conversationsummary")
    op.drop_table("muicebot_msg")
    op.drop_table("muicebot_plugin_meme_memeorm")
    op.drop_table("muicebot_user")
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "muicebot_user",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("userid", sa.VARCHAR(), nullable=False),
        sa.Column("nickname", sa.VARCHAR(), nullable=True),
        sa.Column("profile", sa.VARCHAR(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_muicebot_user")),
    )
    op.create_table(
        "muicebot_plugin_meme_memeorm",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("path", sa.VARCHAR(), nullable=False),
        sa.Column("hash", sa.VARCHAR(), nullable=False),
        sa.Column("valid", sa.INTEGER(), nullable=False),
        sa.Column("description", sa.VARCHAR(), nullable=False),
        sa.Column("tag", sa.VARCHAR(), nullable=False),
        sa.Column("usage", sa.INTEGER(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_muicebot_plugin_meme_memeorm")),
    )
    op.create_table(
        "muicebot_msg",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("time", sa.VARCHAR(), nullable=False),
        sa.Column("userid", sa.VARCHAR(), nullable=False),
        sa.Column("groupid", sa.VARCHAR(), nullable=True),
        sa.Column("message", sa.TEXT(), nullable=False),
        sa.Column("respond", sa.TEXT(), nullable=False),
        sa.Column("history", sa.INTEGER(), nullable=True),
        sa.Column("resources", sa.TEXT(), nullable=True),
        sa.Column("usage", sa.INTEGER(), server_default=sa.text("(-1)"), nullable=True),
        sa.Column("profile", sa.VARCHAR(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_muicebot_msg")),
    )
    op.create_table(
        "muicebot_plugin_memory_conversationsummary",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("content", sa.VARCHAR(), nullable=False),
        sa.Column("userid", sa.VARCHAR(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_muicebot_plugin_memory_conversationsummary")),
    )
    op.create_table(
        "muicebot_usage",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("plugin", sa.VARCHAR(), nullable=False),
        sa.Column("type", sa.VARCHAR(), nullable=False),
        sa.Column("date", sa.VARCHAR(), nullable=False),
        sa.Column("tokens", sa.INTEGER(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_muicebot_usage")),
    )
    op.create_table(
        "muicebot_plugin_memory_userprofile",
        sa.Column("user_id", sa.VARCHAR(length=64), nullable=False),
        sa.Column("key_memory", sa.TEXT(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("preferences", sa.TEXT(), nullable=True),
        sa.PrimaryKeyConstraint("user_id", name=op.f("pk_muicebot_plugin_memory_userprofile")),
    )
    op.create_table(
        "muicebot_plugin_memory_memorymetric",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("userid", sa.VARCHAR(), nullable=False),
        sa.Column("content", sa.VARCHAR(), nullable=False),
        sa.Column("arousal", sa.FLOAT(), nullable=False),
        sa.Column("llm_importance", sa.FLOAT(), nullable=False),
        sa.Column("r1_count", sa.INTEGER(), nullable=False),
        sa.Column("r2_count", sa.INTEGER(), nullable=False),
        sa.Column("session_interval", sa.INTEGER(), nullable=False),
        sa.Column("total_retrieval_count", sa.INTEGER(), nullable=False),
        sa.Column("retained", sa.BOOLEAN(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_muicebot_plugin_memory_memorymetric")),
    )
    op.drop_table("rikka_userbindinfo")
    # ### end Alembic commands ###
